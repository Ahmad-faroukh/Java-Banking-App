package accountingsystem;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ACER E15
 */
public class UserPannel extends javax.swing.JFrame {

    /**
     * Creates new form UserPannel
     */
    private final String userID;
    private double userBalance;

    public UserPannel() throws ClassNotFoundException, SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        userID = UserLoginWindow.getUserID();
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/accountingsystem", "root", "");
        Statement sql = con.createStatement();
        ResultSet rs = sql.executeQuery("select * from users where account_id = " + userID);
        while (rs.next()) {
            userBalance = rs.getDouble("balance");
            balance_lb.setText(String.valueOf(rs.getDouble("balance") + " $"));
            info_id.setText(rs.getString("account_id"));
            info_name.setText(rs.getString("name"));
            if (rs.getString("gender").equals("1")) {
                info_gender.setText("male");
            } else {
                info_gender.setText("female");
            }
            info_phone.setText(rs.getString("phone"));
            info_email.setText(rs.getString("email"));
            info_balance.setText(rs.getString("balance") + " $");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        exit_btn3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        balance_lb = new javax.swing.JLabel();
        deposit_btn = new javax.swing.JButton();
        withdraw_btn = new javax.swing.JButton();
        transfer_btn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        account_to_tf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ammount_to_tf = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        exit_btn4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        new_password_tf = new javax.swing.JTextField();
        new_password2_tf = new javax.swing.JTextField();
        save_password_btn = new javax.swing.JButton();
        old_password_tf = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        exit_btn5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        info_id = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        info_balance = new javax.swing.JLabel();
        info_gender = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        save_btn = new javax.swing.JButton();
        info_phone = new javax.swing.JTextField();
        info_email = new javax.swing.JTextField();
        info_name = new javax.swing.JTextField();
        edit_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard");

        exit_btn3.setText("Back To Main Menu");
        exit_btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_btn3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Your Balance :");

        deposit_btn.setText("Deposit Creidts");
        deposit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deposit_btnActionPerformed(evt);
            }
        });

        withdraw_btn.setText("Withdraw Credits");
        withdraw_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdraw_btnActionPerformed(evt);
            }
        });

        transfer_btn.setText("Transfer To Account");
        transfer_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transfer_btnActionPerformed(evt);
            }
        });

        jLabel3.setText("=========================================");

        jLabel5.setText("Account ID :");

        jLabel6.setText("Ammount :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(deposit_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(withdraw_btn)
                .addGap(80, 80, 80))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(balance_lb, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ammount_to_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(37, 37, 37)
                                .addComponent(account_to_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(transfer_btn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(exit_btn3)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(balance_lb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deposit_btn)
                    .addComponent(withdraw_btn))
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(account_to_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ammount_to_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(transfer_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(exit_btn3)
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Account Managment", jPanel1);

        exit_btn4.setText("Back To Main Menu");
        exit_btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_btn4ActionPerformed(evt);
            }
        });

        jLabel7.setText("Old Password :");

        jLabel8.setText("New Password :");

        jLabel9.setText("Confirm Password :");

        save_password_btn.setText("Save");
        save_password_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_password_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save_password_btn)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(new_password2_tf, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(new_password_tf)
                            .addComponent(old_password_tf))))
                .addContainerGap(132, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exit_btn4)
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(old_password_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(new_password_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(new_password2_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(save_password_btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addComponent(exit_btn4)
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Change Password", jPanel2);

        exit_btn5.setText("Back To Main Menu");
        exit_btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_btn5ActionPerformed(evt);
            }
        });

        jLabel2.setText("Account ID :");

        jLabel4.setText("Holder Name :");

        jLabel10.setText("Gender :");

        jLabel11.setText("Email :");

        jLabel12.setText("Phone Number :");

        jLabel14.setText("Balance :");

        save_btn.setText("Save Changes");
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });

        info_phone.setEditable(false);

        info_email.setEditable(false);

        info_name.setEditable(false);

        edit_btn.setText("Edit Info");
        edit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(14, 14, 14)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(info_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(info_name, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(info_id, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(info_balance, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(info_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(info_email, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addComponent(edit_btn)
                        .addGap(0, 24, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(save_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit_btn5)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(info_id, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(edit_btn)))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(info_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(info_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(info_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(info_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(info_balance, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save_btn)
                    .addComponent(exit_btn5))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("My Proflie", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exit_btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btn3ActionPerformed
        int x = JOptionPane.showConfirmDialog(
                this, "Confirm Exit!",
                "Confirm",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (x == 0) {
            MainPage mainPage = new MainPage();
            this.setVisible(false);
            mainPage.setVisible(true);
        }
    }//GEN-LAST:event_exit_btn3ActionPerformed

    private void exit_btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btn4ActionPerformed
        int x = JOptionPane.showConfirmDialog(
                this, "Confirm Exit!",
                "Confirm",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (x == 0) {
            MainPage mainPage = new MainPage();
            this.setVisible(false);
            mainPage.setVisible(true);
        }
    }//GEN-LAST:event_exit_btn4ActionPerformed

    private void deposit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deposit_btnActionPerformed
        String ammountInput = "";
        ammountInput = JOptionPane.showInputDialog("Enter Ammount");
        if (ammountInput != null) {
            if (ammountInput.matches("[0-9]*([.]{1})?[0-9]{1,2}")) {
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/accountingsystem", "root", "");
                    Statement sql = con.createStatement();
                    double ammount = Double.parseDouble(ammountInput);
                    ammount += userBalance;
                    ammount = Math.round(ammount * 100.0) / 100.0;
                    PreparedStatement ps = con.prepareStatement("update users set balance =" + ammount
                            + " where account_id=" + userID);
                    ps.execute();
                    JOptionPane.showMessageDialog(
                            this, "Depost Complete Please Check Your Balance",
                            "Scucess",
                            JOptionPane.INFORMATION_MESSAGE);
                    ResultSet rs = sql.executeQuery("select * from users where account_id = " + userID);
                    while (rs.next()) {
                        userBalance = rs.getDouble("balance");
                        balance_lb.setText(String.valueOf(rs.getDouble("balance") + " $"));
                        info_balance.setText(rs.getString("balance") + " $");
                    }

                    File logs = new File("E:\\Java\\AccountingSystem\\src\\accountingsystem\\logs.txt");
                    if (!logs.exists()) {
                        logs.createNewFile();
                    }

                    String newLine = System.getProperty("line.separator");
                    FileOutputStream fos = new FileOutputStream(logs, true);
                    OutputStreamWriter osw = new OutputStreamWriter(fos);
                    PrintWriter pw = new PrintWriter(osw);

                    pw.append("Query : " + ps + newLine);
                    pw.append("Account With ID : " + userID + " Deposted " + ammountInput + newLine);
                    pw.close();

                } catch (ClassNotFoundException ex) {
                    ex.printStackTrace();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(
                        this, "Procedure Failed",
                        "Invalid Input",
                        JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_deposit_btnActionPerformed

    private void withdraw_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdraw_btnActionPerformed
        String ammountInput = JOptionPane.showInputDialog("Enter Ammount");
        if (ammountInput != null) {
            if (ammountInput.matches("[0-9]*([.]{1})?[0-9]{1,2}")) {
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/accountingsystem", "root", "");
                    Statement sql = con.createStatement();
                    double ammount = Double.parseDouble(ammountInput);
                    if (ammount < userBalance) {
                        ammount = userBalance - ammount;
                        ammount = Math.round(ammount * 100.0) / 100.0;
                        PreparedStatement ps = con.prepareStatement("update users set balance =" + ammount
                                + " where account_id=" + userID);
                        ps.execute();
                        JOptionPane.showMessageDialog(
                                this, "Withdraw Complete Please Check Your Balance",
                                "Scucess",
                                JOptionPane.INFORMATION_MESSAGE);
                        ResultSet rs = sql.executeQuery("select * from users where account_id = " + userID);
                        while (rs.next()) {
                            userBalance = rs.getDouble("balance");
                            balance_lb.setText(String.valueOf(rs.getDouble("balance") + " $"));
                            info_balance.setText(rs.getString("balance") + " $");
                        }

                        File logs = new File("E:\\Java\\AccountingSystem\\src\\accountingsystem\\logs.txt");
                        if (!logs.exists()) {
                            logs.createNewFile();
                        }

                        String newLine = System.getProperty("line.separator");
                        FileOutputStream fos = new FileOutputStream(logs, true);
                        OutputStreamWriter osw = new OutputStreamWriter(fos);
                        PrintWriter pw = new PrintWriter(osw);

                        pw.append("Query : " + ps + newLine);
                        pw.append("Account With ID : " + userID + " Withdrew " + ammountInput + newLine);
                        pw.close();
                    } else {
                        JOptionPane.showMessageDialog(
                                this, "Insufficient Funds",
                                "Procedure Failed",
                                JOptionPane.WARNING_MESSAGE);
                    }
                } catch (ClassNotFoundException ex) {
                    ex.printStackTrace();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                } catch (IOException ex) {
                    Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(
                        this, "Procedure Failed",
                        "Invalid Input",
                        JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_withdraw_btnActionPerformed

    private void exit_btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btn5ActionPerformed
        int x = JOptionPane.showConfirmDialog(
                this, "Confirm Exit!",
                "Confirm",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (x == 0) {
            MainPage mainPage = new MainPage();
            this.setVisible(false);
            mainPage.setVisible(true);
        }
    }//GEN-LAST:event_exit_btn5ActionPerformed

    private void edit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_btnActionPerformed
        info_name.setEditable(true);
        info_phone.setEditable(true);
        info_email.setEditable(true);
    }//GEN-LAST:event_edit_btnActionPerformed

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
        try {
            if (info_name.getText().equals("")
                    || info_phone.getText().equals("")
                    || info_email.getText().equals("")) {

                JOptionPane.showMessageDialog(
                        this, "Please Fill All Required Feilds",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else if (!(info_phone.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                        this, "Phone Number Must Be Numric Digits",
                        "Invalid Data Type",
                        JOptionPane.ERROR_MESSAGE);
            } else if (!(info_email.getText().matches("[A-Za-z0-9-_.]+@[A-Za-z0-9-_]+[.][a-zA-Z]{2,6}"))) {
                JOptionPane.showMessageDialog(
                        this, "Invalid Email Adress",
                        "Invalid Entry",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/accountingsystem", "root", "");
                Statement sql = con.createStatement();
                PreparedStatement ps = con.prepareStatement("UPDATE users SET name = ?, phone = ?, email = ? WHERE account_id = ?");
                ps.setString(1, info_name.getText());
                ps.setString(2, info_phone.getText());
                ps.setString(3, info_email.getText());
                ps.setString(4, userID);
                ps.execute();

                info_name.setEditable(false);
                info_phone.setEditable(false);
                info_email.setEditable(false);

                if (ps.execute() == false) {
                    JOptionPane.showMessageDialog(
                            this, "Changes Saved",
                            "Scucess",
                            JOptionPane.INFORMATION_MESSAGE);

                    File logs = new File("E:\\Java\\AccountingSystem\\src\\accountingsystem\\logs.txt");
                    if (!logs.exists()) {
                        logs.createNewFile();
                    }

                    String newLine = System.getProperty("line.separator");
                    FileOutputStream fos = new FileOutputStream(logs, true);
                    OutputStreamWriter osw = new OutputStreamWriter(fos);
                    PrintWriter pw = new PrintWriter(osw);

                    String timeStamp = new SimpleDateFormat("yyyy/MM/dd/ HH:mm:ss").format(Calendar.getInstance().getTime());
                    pw.append("Query : " + ps + newLine);
                    pw.append("Account With ID : " + userID + " Changed His Info @ "+timeStamp + newLine);
                    pw.close();
                }
            }
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_save_btnActionPerformed

    private void transfer_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transfer_btnActionPerformed
        if (account_to_tf.getText().equals("")
                || ammount_to_tf.getText().equals("")) {

            JOptionPane.showMessageDialog(
                    this, "Please Fill All Required Feilds",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else if (!(account_to_tf.getText().matches("[0-9]*"))) {
            JOptionPane.showMessageDialog(
                    this, "Account ID Must Be Numric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
        } else if (!(ammount_to_tf.getText().matches("[0-9]*([.]{1})?[0-9]{1,2}"))) {
            JOptionPane.showMessageDialog(
                    this, "Invalid Ammount",
                    "Invalid Entry",
                    JOptionPane.ERROR_MESSAGE);
        } else if (account_to_tf.getText().length() != 10) {
            JOptionPane.showMessageDialog(
                    this, "Account ID Must Be 10 digts",
                    "Invalid ID length",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            String ammountInput = ammount_to_tf.getText();
            if (ammountInput != null) {
                if (ammountInput.matches("[0-9]*([.]{1})?[0-9]{1,2}")) {
                    try {
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/accountingsystem", "root", "");
                        Statement sql = con.createStatement();

                        double balanceFrom = 0;
                        ResultSet rs1 = sql.executeQuery("select * from users where account_id = " + userID);
                        while (rs1.next()) {
                            balanceFrom = rs1.getDouble("balance");
                        }
                        double ammount = Double.parseDouble(ammountInput);
                        if (ammount <= balanceFrom) {
                            double balanceTo = 0;
                            ResultSet rs = sql.executeQuery("select * from users where account_id = " + account_to_tf.getText());
                            String idTo = "";
                            while (rs.next()) {
                                idTo = rs.getString("account_id");
                            }
                            if (idTo.equals(account_to_tf.getText())) {
                                ResultSet rs2 = sql.executeQuery("select * from users where account_id = " + account_to_tf.getText());
                                while (rs2.next()) {
                                    balanceTo = rs2.getDouble("balance");
                                }
                                ammount = Math.round(ammount * 100.0) / 100.0;
                                balanceFrom = balanceFrom - ammount;
                                balanceFrom = Math.round(balanceFrom * 100.0) / 100.0;
                                PreparedStatement ps = con.prepareStatement("update users set balance =" + balanceFrom
                                        + " where account_id=" + userID);
                                balanceTo = balanceTo + ammount;
                                PreparedStatement ps2 = con.prepareStatement("update users set balance =" + balanceTo
                                        + " where account_id=" + account_to_tf.getText());

                                ps.execute();
                                ps2.execute();
                                if (ps.execute() == false && ps2.execute() == false) {
                                    balance_lb.setText(String.valueOf(balanceFrom));
                                    info_balance.setText(String.valueOf(balanceFrom));

                                    JOptionPane.showMessageDialog(
                                            this, "Transfer Complete Please Check Your Balance",
                                            "Scucess",
                                            JOptionPane.INFORMATION_MESSAGE);

                                    File logs = new File("E:\\Java\\AccountingSystem\\src\\accountingsystem\\logs.txt");
                                    if (!logs.exists()) {
                                        logs.createNewFile();
                                    }

                                    String newLine = System.getProperty("line.separator");
                                    FileOutputStream fos = new FileOutputStream(logs, true);
                                    OutputStreamWriter osw = new OutputStreamWriter(fos);
                                    PrintWriter pw = new PrintWriter(osw);

                                    String timeStamp = new SimpleDateFormat("yyyy/MM/dd/ HH:mm:ss").format(Calendar.getInstance().getTime());
                                    pw.append("Query : " + ps + newLine);
                                    pw.append("Query : " + ps2 + newLine);
                                    pw.append("Account With ID : " + userID + " Transferd " + ammount_to_tf.getText()
                                            + " To " + account_to_tf.getText() + " @ " + timeStamp + newLine);
                                    pw.close();
                                    ammount_to_tf.setText("");
                                    account_to_tf.setText("");
                                }
                            } else {
                                JOptionPane.showMessageDialog(
                                        this, "Account Deosnt Exist",
                                        "Procedure Failed",
                                        JOptionPane.WARNING_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(
                                    this, "Insufficient Funds",
                                    "Procedure Failed",
                                    JOptionPane.WARNING_MESSAGE);
                        }
                    } catch (ClassNotFoundException | SQLException ex) {
                        ex.printStackTrace();
                    } catch (IOException ex) {
                        Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_transfer_btnActionPerformed

    private void save_password_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_password_btnActionPerformed
        try {
            String userInput = old_password_tf.getText();
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(userInput.getBytes());
            BigInteger number = new BigInteger(1, messageDigest);
            String hashedText = number.toString(16);

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/accountingsystem", "root", "");
            Statement sql = con.createStatement();

            ResultSet rs1 = sql.executeQuery("select * from users where account_id = " + userID);
            String old_password = "";
            while (rs1.next()) {
                old_password = rs1.getString("password");
            }
            if (old_password_tf.getText().equals("")
                    || new_password_tf.getText().equals("")
                    || new_password2_tf.getText().equals("")) {
                JOptionPane.showMessageDialog(
                        this, "Please Fill All Required Feilds",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else if (!(new_password_tf.getText().equals(new_password2_tf.getText()))) {
                JOptionPane.showMessageDialog(
                        this, "Passwords Dont Match",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else if (!(hashedText.equals(old_password))) {
                JOptionPane.showMessageDialog(
                        this, "Wrong Password",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                String userInput2 = new_password_tf.getText();
                MessageDigest md2 = MessageDigest.getInstance("MD5");
                byte[] messageDigest2 = md.digest(userInput.getBytes());
                BigInteger number2 = new BigInteger(1, messageDigest);
                String newPasswordHashed = number.toString(16);
                PreparedStatement ps = con.prepareStatement("update users set password = MD5(?) where account_id = ?");
                ps.setString(1, new_password_tf.getText());
                ps.setString(2, userID);
                ps.execute();

                if (ps.execute() == false) {
                    JOptionPane.showMessageDialog(
                            this, "Password Was Changed Please Re Login",
                            "Scucess",
                            JOptionPane.INFORMATION_MESSAGE);
                    old_password_tf.setText("");
                    new_password_tf.setText("");
                    new_password2_tf.setText("");

                    this.setVisible(false);
                    UserLoginWindow loginWindow = new UserLoginWindow();
                    loginWindow.setVisible(true);

                    File logs = new File("E:\\Java\\AccountingSystem\\src\\accountingsystem\\logs.txt");
                    if (!logs.exists()) {
                        logs.createNewFile();
                    }

                    String newLine = System.getProperty("line.separator");
                    FileOutputStream fos = new FileOutputStream(logs, true);
                    OutputStreamWriter osw = new OutputStreamWriter(fos);
                    PrintWriter pw = new PrintWriter(osw);

                    String timeStamp = new SimpleDateFormat("yyyy/MM/dd/ HH:mm:ss").format(Calendar.getInstance().getTime());
                    pw.append("Query : " + ps + newLine);
                    pw.append("Account With ID : " + userID + " Changed His Password @ " + timeStamp + newLine);
                    pw.close();
                }
            }
        } catch (NoSuchAlgorithmException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_save_password_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new UserPannel().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField account_to_tf;
    private javax.swing.JTextField ammount_to_tf;
    private javax.swing.JLabel balance_lb;
    private javax.swing.JButton deposit_btn;
    private javax.swing.JButton edit_btn;
    private javax.swing.JButton exit_btn3;
    private javax.swing.JButton exit_btn4;
    private javax.swing.JButton exit_btn5;
    private javax.swing.JLabel info_balance;
    private javax.swing.JTextField info_email;
    private javax.swing.JLabel info_gender;
    private javax.swing.JLabel info_id;
    private javax.swing.JTextField info_name;
    private javax.swing.JTextField info_phone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField new_password2_tf;
    private javax.swing.JTextField new_password_tf;
    private javax.swing.JPasswordField old_password_tf;
    private javax.swing.JButton save_btn;
    private javax.swing.JButton save_password_btn;
    private javax.swing.JButton transfer_btn;
    private javax.swing.JButton withdraw_btn;
    // End of variables declaration//GEN-END:variables
}
